{"version":3,"sources":["firebase.js","components/sidepanel/UserPanel.js","actions/index.js","actions/types.js","components/sidepanel/Channels.js","components/sidepanel/DirectMessages.js","components/sidepanel/Starred.js","components/colorpanel/ColorPanel.js","components/sidepanel/SidePanel.js","components/messages/MessagesHeader.js","components/messages/FileModal.js","components/messages/ProgressBar.js","components/messages/MessageForm.js","components/messages/Message.js","components/messages/Typing.js","components/messages/Skeleton.js","components/messages/Messages.js","components/trending/Trending.js","components/gifsearch/GifItem.js","components/gifsearch/GifList.js","components/gifsearch/SearchBar.js","components/gifsearch/GifModal.js","components/gifsearch/Search.js","components/App.js","components/auth/Login.js","components/auth/Register.js","Spinner.js","registerServiceWorker.js","reducers/index.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","UserPanel","state","user","_this","props","currentUser","modal","previewImage","croppedImage","blob","uploadedCroppedImage","storageRef","storage","ref","userRef","auth","usersRef","database","metadata","contentType","openModal","setState","closeModal","dropdownOptions","key","text","react_default","a","createElement","displayName","disabled","onClick","handleSignout","uploadCroppedImage","_this$state","child","concat","uid","put","then","snap","getDownloadURL","downloadURL","changeAvatar","updateProfile","photoURL","console","log","catch","err","error","update","avatar","handleChange","event","file","target","files","reader","FileReader","readAsDataURL","addEventListener","result","handleCropImage","avatarEditor","getImageScaledToCanvas","toBlob","imageUrl","URL","createObjectURL","signOut","_this2","this","_this$state2","primaryColor","Grid","style","background","Column","Row","padding","margin","Header","inverted","floated","as","Icon","name","Content","Dropdown","trigger","Image","src","spaced","options","Modal","basic","open","onClose","Input","onChange","fluid","type","label","centered","stackable","columns","className","dist_default","node","image","width","height","border","scale","Actions","Button","color","React","Component","setCurrentChannel","channel","payload","currentChannel","setPrivateChannel","isPrivateChannel","Channels","activeChannel","channels","channelName","channelDetails","channelsRef","messagesRef","typingRef","notifications","firstLoad","addListeners","loadedChannels","on","push","val","setFirstChannel","addNotificationListener","channelId","handleNotifications","id","currentChannelId","lastTotal","index","findIndex","notification","total","numChildren","count","lastKnownTotal","removeListeners","off","forEach","firstChannel","length","setActiveChannel","addChannel","newChannel","details","createdBy","handleSubmit","preventDefault","isFormValid","Object","defineProperty","value","changeChannel","remove","clearNotifications","updatedNotifications","toConsumableArray","getNotificationCount","displayChannels","map","Menu","Item","opacity","active","Label","_ref","Fragment","Form","onSubmit","Field","connect","DirectMessages","users","connectedRef","presenceRef","currentUserUid","loadedUsers","set","onDisconnect","addStatusToUser","userId","connected","arguments","undefined","updatedUsers","reduce","acc","isUserOnline","status","channelData","getChannelId","currentUserId","fontStyle","Starred","starredChannels","removeListener","starredChannel","objectSpread","channelToRemove","filteredChannels","filter","ColorPanel","primary","secondary","userColors","visible","addListener","unshift","handleChangePrimary","hex","handleChangeSecondary","handleSaveColors","saveColors","displayUserColors","colors","i","Divider","setColors","icon","vertical","size","Segment","content","lib","secondaryColor","SidePanel","_this$props","attached","fontSize","position","simple","item","sidepanel_Starred","sidepanel_Channels","sidepanel_DirectMessages","colorpanel_ColorPanel","sidepanel_UserPanel","MessagesHeader","numUniqueUsers","handleSearchChange","searchLoading","handleStar","isChannelStarred","clearing","marginBottom","Subheader","loading","action","placeholder","FileModal","authorized","addFile","sendFile","uploadFile","isAuthorized","mime","lookup","clearFile","filename","includes","_this$props2","ProgressBar","uploadState","percentUploaded","Progress","percent","progress","indicating","MessageForm","uploadTask","message","errors","emojiPicker","handleKeyDown","keyCode","sendMessage","handleTogglePicker","handleAddEmoji","emoji","oldMessage","newMessage","colonToUnicode","colons","setTimeout","messageInputRef","focus","replace","x","emojiIndex","emojis","unicode","native","createMessage","fileUrl","timestamp","ServerValue","TIMESTAMP","getMessagesRef","getPath","pathToUpload","filePath","uuidv4","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","sendFileMessage","cancel","_this$state3","dist_es","onSelect","title","onKeyDown","labelPosition","some","Group","widths","messages_FileModal","messages_ProgressBar","isOwnMessage","Message","Comment","Avatar","Author","Metadata","moment","fromNow","hasOwnProperty","isImage","Text","Typing","Skeleton","Messages","privateChannel","privateMessagesRef","messages","messagesLoading","searchTerm","searchResults","typingUsers","listeners","listener","addToListeners","newListener","scrollToBottom","messagesEnd","scrollIntoView","behavior","addMessageListener","addTypingListeners","loadedMessages","countUniqueUsers","countUserPosts","addUserStarsListener","once","data","prevStarred","keys","prevState","starChannel","handleSearchMessages","channelMessages","regex","RegExp","match","uniqueUsers","plural","userPosts","setUserPosts","displayMessages","messages_Message","displayChannelName","displayTypingUsers","display","alignItems","messages_Typing","displayMessageSkeleton","Array","_","messages_Skeleton","prevProps","messages_MessagesHeader","messages_MessageForm","Trending","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","fetchMoreData","gifs","hasMore","from","fetch","API_GIPHY","res","json","_this3","listItems","handleClick","bind","marginLeft","borderColor","Reveal","animated","images","original_still","url","alt","hidden","original","Description","href","rating","react_infinite_scroll_component_lib_default","dataLength","next","loader","Loader","endMessage","textAlign","GifItem","gif","onGifSelect","downsized","GifList","gifItems","gifsearch_GifItem","SearchBar","term","onTermChange","onInputChange","GifModal","selectedGif","react_modal_lib_default","isOpen","modalIsOpen","onRequestClose","top","left","right","bottom","source","Search","handleTermChange","assertThisInitialized","request","get","body","gifsearch_SearchBar","gifsearch_GifList","gifsearch_GifModal","sidepanel_SidePanel","gifsearch_Search","trending_Trending","messages_Messages","Login","email","password","displayErrors","signInWithEmailAndPassword","signedInUser","handleIputError","inputName","toLowerCase","verticalAlign","maxWidth","stacked","iconPosition","collections_Message_Message","Link","to","Register","username","passwordConfirmation","isformEmpty","isPasswordValid","_ref2","createUserWithEmailAndPassword","createdUser","md5","saveUser","Spinner","Dimmer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","initialUserState","isLoading","initialChannelState","initialColorsState","rootReducer","combineReducers","store","createStore","composeWithDevTools","Root","onAuthStateChanged","setUser","history","clearUser","src_Spinner","Switch","Route","exact","path","component","App","RootWithAuth","withRouter","ReactDOM","render","es","BrowserRouter","document","getElementById","process","origin","response","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ae3ced17.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\n// sub dependencies\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\"; \n\n\n\n\n\n  var config = {\n    apiKey: \"AIzaSyACw8X1qTS0XlYSXsYEAOa0WcQx8TChkVM\",\n    authDomain: \"giphy-adcd2.firebaseapp.com\",\n    databaseURL: \"https://giphy-adcd2.firebaseio.com\",\n    projectId: \"giphy-adcd2\",\n    storageBucket: \"giphy-adcd2.appspot.com\",\n    messagingSenderId: \"884423717039\"\n  };\n  firebase.initializeApp(config);\n\n\n  export default firebase;","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport AvatarEditor from \"react-avatar-editor\";\n// prettier-ignore\nimport { Grid, Header, Icon, Dropdown, Image, Modal, Input, Button } from \"semantic-ui-react\";\n\nclass UserPanel extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    modal: false,\n    previewImage: \"\",\n    croppedImage: \"\",\n    blob: null,\n    uploadedCroppedImage: \"\",\n    storageRef: firebase.storage().ref(),\n    userRef: firebase.auth().currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    metadata: {\n      contentType: \"image/jpeg\"\n    }\n  };\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  dropdownOptions = () => [\n    {\n      key: \"user\",\n      text: (\n        <span>\n          Signed in as <strong>{this.state.user.displayName}</strong>\n        </span>\n      ),\n      disabled: true\n    },\n    {\n      key: \"avatar\",\n      text: <span onClick={this.openModal}>Change Avatar</span>\n    },\n    {\n      key: \"signout\",\n      text: <span onClick={this.handleSignout}>Sign Out</span>\n    }\n  ];\n\n  // change avatar\n  uploadCroppedImage = () => {\n    const { storageRef, userRef, blob, metadata } = this.state;\n\n    storageRef\n      .child(`avatars/users/${userRef.uid}`)\n      .put(blob, metadata)\n      .then(snap => {\n        snap.ref.getDownloadURL().then(downloadURL => {\n          this.setState({ uploadedCroppedImage: downloadURL }, () =>\n            this.changeAvatar()\n          );\n        });\n      });\n  };\n\n\n  changeAvatar = () => {\n    this.state.userRef\n      .updateProfile({\n        photoURL: this.state.uploadedCroppedImage\n      })\n      .then(() => {\n        console.log(\"PhotoURL updated\");\n        this.closeModal();\n      })\n      .catch(err => {\n        console.error(err);\n      });\n\n    this.state.usersRef\n      .child(this.state.user.uid)\n      .update({ avatar: this.state.uploadedCroppedImage })\n      .then(() => {\n        console.log(\"User avatar updated\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleChange = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n\n    if (file) {\n      reader.readAsDataURL(file);\n      reader.addEventListener(\"load\", () => {\n        this.setState({ previewImage: reader.result });\n      });\n    }\n  };\n\n  handleCropImage = () => {\n    if (this.avatarEditor) {\n      this.avatarEditor.getImageScaledToCanvas().toBlob(blob => {\n        let imageUrl = URL.createObjectURL(blob);\n        this.setState({\n          croppedImage: imageUrl,\n          blob\n        });\n      });\n    }\n  };\n\n  // sign out\n  handleSignout = () => {\n    firebase\n      .auth()\n      .signOut()\n      .then(() => console.log(\"signed out!\"));\n  };\n\n  render() {\n    const { user, modal, previewImage, croppedImage } = this.state;\n    const { primaryColor } = this.props;\n\n    return (\n      <Grid style={{ background: primaryColor }}>\n        <Grid.Column>\n          <Grid.Row style={{ padding: \"0.25em\", margin: 0 }}>\n            {/* App Header */}\n            <Header inverted floated=\"left\" as=\"h5\">\n              <Icon name=\"bullhorn\" />\n              <Header.Content>GiphyChat</Header.Content>\n            </Header>\n\n            {/* User Dropdown  */}\n            <Header style={{ padding: \"0.25em\" }} as=\"h5\" inverted>\n              <Dropdown\n                trigger={\n                  <span>\n                    <Image src={user.photoURL} spaced=\"right\" avatar />\n                    {user.displayName}\n                  </span>\n                }\n                options={this.dropdownOptions()}\n              />\n            </Header>\n          </Grid.Row>\n\n          {/* Change User Avatar Modal   */}\n          <Modal basic open={modal} onClose={this.closeModal}>\n            <Modal.Header>Change Avatar</Modal.Header>\n            <Modal.Content>\n              <Input\n                onChange={this.handleChange}\n                fluid\n                type=\"file\"\n                label=\"New Avatar\"\n                name=\"previewImage\"\n              />\n              <Grid centered stackable columns={2}>\n                <Grid.Row centered>\n                  <Grid.Column className=\"ui center aligned grid\">\n                    {previewImage && (\n                      <AvatarEditor\n                        ref={node => (this.avatarEditor = node)}\n                        image={previewImage}\n                        width={120}\n                        height={120}\n                        border={50}\n                        scale={1.2}\n                      />\n                    )}\n                  </Grid.Column>\n                  <Grid.Column>\n                    {croppedImage && (\n                      <Image\n                        style={{ margin: \"3.5em auto\" }}\n                        width={100}\n                        height={100}\n                        src={croppedImage}\n                      />\n                    )}\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Modal.Content>\n            <Modal.Actions>\n              {croppedImage && (\n                <Button\n                  color=\"green\"\n                  inverted\n                  onClick={this.uploadCroppedImage}\n                >\n                  <Icon name=\"save\" /> Change Avatar\n                </Button>\n              )}\n              <Button color=\"green\" inverted onClick={this.handleCropImage}>\n                <Icon name=\"image\" /> Preview\n              </Button>\n              <Button color=\"red\" inverted onClick={this.closeModal}>\n                <Icon name=\"remove\" /> Cancel\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default UserPanel;\n","import * as actionTypes from \"./types\";\n\n/* User Actions */\nexport const setUser = user => {\n  return {\n    type: actionTypes.SET_USER,\n    payload: {\n      currentUser: user\n    }\n  };\n};\n\nexport const clearUser = () => {\n  return {\n    type: actionTypes.CLEAR_USER\n  };\n};\n\n/* Channel Actions */\nexport const setCurrentChannel = channel => {\n  return {\n    type: actionTypes.SET_CURRENT_CHANNEL,\n    payload: {\n      currentChannel: channel\n    }\n  };\n};\n\nexport const setPrivateChannel = isPrivateChannel => {\n  return {\n    type: actionTypes.SET_PRIVATE_CHANNEL,\n    payload: {\n      isPrivateChannel\n    }\n  };\n};\n\nexport const setUserPosts = userPosts => {\n  return {\n    type: actionTypes.SET_USER_POSTS,\n    payload: {\n      userPosts\n    }\n  };\n};\n\n/* Colors Actions */\nexport const setColors = (primaryColor, secondaryColor) => {\n  return {\n    type: actionTypes.SET_COLORS,\n    payload: {\n      primaryColor,\n      secondaryColor\n    }\n  };\n};\n","// user action types\nexport const SET_USER = \"SET_USER\";\nexport const CLEAR_USER = \"CLEAR_USER\";\n\n// channel action types\nexport const SET_CURRENT_CHANNEL = 'SET_CURRENT_CHANNEL';\nexport const SET_PRIVATE_CHANNEL = \"SET_PRIVATE_CHANNEL\";\nexport const SET_USER_POSTS = \"SET_USER_POSTS\";\n\n/* Colors Action Types */\nexport const SET_COLORS = \"SET_COLORS\";","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\n// prettier-ignore\nimport { Menu, Icon, Modal, Form, Input, Button, Label } from \"semantic-ui-react\";\n\nclass Channels extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    channel: null,\n    channels: [],\n    channelName: \"\",\n    channelDetails: \"\",\n    channelsRef: firebase.database().ref(\"channels\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    typingRef: firebase.database().ref(\"typing\"),\n    notifications: [],\n    modal: false,\n    firstLoad: true\n  };\n\n  componentDidMount() {\n    this.addListeners();\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  addListeners = () => {\n    let loadedChannels = [];\n    this.state.channelsRef.on(\"child_added\", snap => {\n      loadedChannels.push(snap.val());\n      this.setState({ channels: loadedChannels }, () => this.setFirstChannel());\n      this.addNotificationListener(snap.key);\n    });\n  };\n\n  addNotificationListener = channelId => {\n    this.state.messagesRef.child(channelId).on(\"value\", snap => {\n      if (this.state.channel) {\n        this.handleNotifications(\n          channelId,\n          this.state.channel.id,\n          this.state.notifications,\n          snap\n        );\n      }\n    });\n  };\n\n  handleNotifications = (channelId, currentChannelId, notifications, snap) => {\n    let lastTotal = 0;\n\n    let index = notifications.findIndex(\n      notification => notification.id === channelId\n    );\n\n    if (index !== -1) {\n      if (channelId !== currentChannelId) {\n        lastTotal = notifications[index].total;\n\n        if (snap.numChildren() - lastTotal > 0) {\n          notifications[index].count = snap.numChildren() - lastTotal;\n        }\n      }\n      notifications[index].lastKnownTotal = snap.numChildren();\n    } else {\n      notifications.push({\n        id: channelId,\n        total: snap.numChildren(),\n        lastKnownTotal: snap.numChildren(),\n        count: 0\n      });\n    }\n\n    this.setState({ notifications });\n  };\n\n  removeListeners = () => {\n    this.state.channelsRef.off();\n    this.state.channels.forEach(channel => {\n      this.state.messagesRef.child(channel.id).off();\n    });\n  };\n\n  setFirstChannel = () => {\n    const firstChannel = this.state.channels[0];\n    if (this.state.firstLoad && this.state.channels.length > 0) {\n      this.props.setCurrentChannel(firstChannel);\n      this.setActiveChannel(firstChannel);\n      this.setState({ channel: firstChannel });\n    }\n    this.setState({ firstLoad: false });\n  };\n\n  addChannel = () => {\n    const { channelsRef, channelName, channelDetails, user } = this.state;\n\n    const key = channelsRef.push().key;\n\n    const newChannel = {\n      id: key,\n      name: channelName,\n      details: channelDetails,\n      createdBy: {\n        name: user.displayName,\n        avatar: user.photoURL\n      }\n    };\n\n    channelsRef\n      .child(key)\n      .update(newChannel)\n      .then(() => {\n        this.setState({ channelName: \"\", channelDetails: \"\" });\n        this.closeModal();\n        console.log(\"channel added\");\n      })\n      .catch(err => {\n        console.error(err);\n      });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.addChannel();\n    }\n  };\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.state.typingRef\n      .child(this.state.channel.id)\n      .child(this.state.user.uid)\n      .remove();\n    this.clearNotifications();\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n    this.setState({ channel });\n  };\n\n  clearNotifications = () => {\n    let index = this.state.notifications.findIndex(\n      notification => notification.id === this.state.channel.id\n    );\n\n    if (index !== -1) {\n      let updatedNotifications = [...this.state.notifications];\n      updatedNotifications[index].total = this.state.notifications[\n        index\n      ].lastKnownTotal;\n      updatedNotifications[index].count = 0;\n      this.setState({ notifications: updatedNotifications });\n    }\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  getNotificationCount = channel => {\n    let count = 0;\n\n    this.state.notifications.forEach(notification => {\n      if (notification.id === channel.id) {\n        count = notification.count;\n      }\n    });\n\n    if (count > 0) return count;\n  };\n\n  displayChannels = channels =>\n    channels.length > 0 &&\n    channels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        {this.getNotificationCount(channel) && (\n          <Label color=\"red\">{this.getNotificationCount(channel)}</Label>\n        )}\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  isFormValid = ({ channelName, channelDetails }) =>\n    channelName && channelDetails;\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { channels, modal } = this.state;\n\n    return (\n      <React.Fragment>\n        <Menu.Menu className=\"menu\">\n          <Menu.Item>\n            <span>\n              <Icon name=\"exchange\" /> CHANNELS\n            </span>{\" \"}\n            ({channels.length}) <Icon name=\"add\" onClick={this.openModal} />\n          </Menu.Item>\n          {this.displayChannels(channels)}\n        </Menu.Menu>\n\n        {/* Add Channel Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Add a Channel</Modal.Header>\n          <Modal.Content>\n            <Form onSubmit={this.handleSubmit}>\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"Name of Channel\"\n                  name=\"channelName\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n\n              <Form.Field>\n                <Input\n                  fluid\n                  label=\"About the Channel\"\n                  name=\"channelDetails\"\n                  onChange={this.handleChange}\n                />\n              </Form.Field>\n            </Form>\n          </Modal.Content>\n\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSubmit}>\n              <Icon name=\"checkmark\" /> Add\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Channels);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass DirectMessages extends React.Component {\n  state = {\n    activeChannel: \"\",\n    user: this.props.currentUser,\n    users: [],\n    usersRef: firebase.database().ref(\"users\"),\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    presenceRef: firebase.database().ref(\"presence\")\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners = () => {\n    this.state.usersRef.off();\n    this.state.presenceRef.off();\n    this.state.connectedRef.off();\n  };\n\n  addListeners = currentUserUid => {\n    let loadedUsers = [];\n    this.state.usersRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        let user = snap.val();\n        user[\"uid\"] = snap.key;\n        user[\"status\"] = \"offline\";\n        loadedUsers.push(user);\n        this.setState({ users: loadedUsers });\n      }\n    });\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        const ref = this.state.presenceRef.child(currentUserUid);\n        ref.set(true);\n        ref.onDisconnect().remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n      }\n    });\n\n    this.state.presenceRef.on(\"child_added\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key);\n      }\n    });\n\n    this.state.presenceRef.on(\"child_removed\", snap => {\n      if (currentUserUid !== snap.key) {\n        this.addStatusToUser(snap.key, false);\n      }\n    });\n  };\n\n  addStatusToUser = (userId, connected = true) => {\n    const updatedUsers = this.state.users.reduce((acc, user) => {\n      if (user.uid === userId) {\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\n      }\n      return acc.concat(user);\n    }, []);\n    this.setState({ users: updatedUsers });\n  };\n\n  isUserOnline = user => user.status === \"online\";\n\n  changeChannel = user => {\n    const channelId = this.getChannelId(user.uid);\n    const channelData = {\n      id: channelId,\n      name: user.name\n    };\n    this.props.setCurrentChannel(channelData);\n    this.props.setPrivateChannel(true);\n    this.setActiveChannel(user.uid);\n  };\n\n  getChannelId = userId => {\n    const currentUserId = this.state.user.uid;\n    return userId < currentUserId\n      ? `${userId}/${currentUserId}`\n      : `${currentUserId}/${userId}`;\n  };\n\n  setActiveChannel = userId => {\n    this.setState({ activeChannel: userId });\n  };\n\n  render() {\n    const { users, activeChannel } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"mail\" /> DIRECT MESSAGES\n          </span>{\" \"}\n          ({users.length})\n        </Menu.Item>\n        {users.map(user => (\n          <Menu.Item\n            key={user.uid}\n            active={user.uid === activeChannel}\n            onClick={() => this.changeChannel(user)}\n            style={{ opacity: 0.7, fontStyle: \"italic\" }}\n          >\n            <Icon\n              name=\"circle\"\n              color={this.isUserOnline(user) ? \"green\" : \"red\"}\n            />\n            @ {user.name}\n          </Menu.Item>\n        ))}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(DirectMessages);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setCurrentChannel, setPrivateChannel } from \"../../actions\";\nimport { Menu, Icon } from \"semantic-ui-react\";\n\nclass Starred extends React.Component {\n  state = {\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    activeChannel: \"\",\n    starredChannels: []\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListeners(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/starred`).off();\n  };\n\n  addListeners = userId => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_added\", snap => {\n        const starredChannel = { id: snap.key, ...snap.val() };\n        this.setState({\n          starredChannels: [...this.state.starredChannels, starredChannel]\n        });\n      });\n\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .on(\"child_removed\", snap => {\n        const channelToRemove = { id: snap.key, ...snap.val() };\n        const filteredChannels = this.state.starredChannels.filter(channel => {\n          return channel.id !== channelToRemove.id;\n        });\n        this.setState({ starredChannels: filteredChannels });\n      });\n  };\n\n  setActiveChannel = channel => {\n    this.setState({ activeChannel: channel.id });\n  };\n\n  changeChannel = channel => {\n    this.setActiveChannel(channel);\n    this.props.setCurrentChannel(channel);\n    this.props.setPrivateChannel(false);\n  };\n\n  displayChannels = starredChannels =>\n    starredChannels.length > 0 &&\n    starredChannels.map(channel => (\n      <Menu.Item\n        key={channel.id}\n        onClick={() => this.changeChannel(channel)}\n        name={channel.name}\n        style={{ opacity: 0.7 }}\n        active={channel.id === this.state.activeChannel}\n      >\n        # {channel.name}\n      </Menu.Item>\n    ));\n\n  render() {\n    const { starredChannels } = this.state;\n\n    return (\n      <Menu.Menu className=\"menu\">\n        <Menu.Item>\n          <span>\n            <Icon name=\"star\" /> STARRED\n          </span>{\" \"}\n          ({starredChannels.length})\n        </Menu.Item>\n        {this.displayChannels(starredChannels)}\n      </Menu.Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setCurrentChannel, setPrivateChannel }\n)(Starred);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\nimport { connect } from \"react-redux\";\nimport { setColors } from \"../../actions\";\n\nimport {  Menu, Divider, Button, Modal, Icon, Label, Segment } from \"semantic-ui-react\";\nimport { CirclePicker } from \"react-color\";\n\nclass ColorPanel extends React.Component {\n  state = {\n    modal: false,\n    primary: \"\",\n    secondary: \"\",\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    userColors: [],\n    visible: false\n  };\n\n  componentDidMount() {\n    if (this.state.user) {\n      this.addListener(this.state.user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListener();\n  }\n\n  removeListener = () => {\n    this.state.usersRef.child(`${this.state.user.uid}/colors`).off();\n  };\n\n  addListener = userId => {\n    let userColors = [];\n    this.state.usersRef.child(`${userId}/colors`).on(\"child_added\", snap => {\n      userColors.unshift(snap.val());\n      this.setState({ userColors });\n    });\n  };\n\n  handleChangePrimary = color => this.setState({ primary: color.hex });\n\n  handleChangeSecondary = color => this.setState({ secondary: color.hex });\n\n  handleSaveColors = () => {\n    if (this.state.primary && this.state.secondary) {\n      this.saveColors(this.state.primary, this.state.secondary);\n    }\n  };\n\n  saveColors = (primary, secondary) => {\n    this.state.usersRef\n      .child(`${this.state.user.uid}/colors`)\n      .push()\n      .update({\n        primary,\n        secondary\n      })\n      .then(() => {\n        console.log(\"Colors added\");\n        this.closeModal();\n      })\n      .catch(err => console.error(err));\n  };\n\n  displayUserColors = colors =>\n    colors.length > 0 &&\n    colors.map((color, i) => (\n      <React.Fragment key={i}>\n        <Divider />\n        <div\n          className=\"color__container\"\n          onClick={() => this.props.setColors(color.primary, color.secondary)}\n        >\n          <div className=\"color__square\" style={{ background: color.primary }}>\n            <div\n              className=\"color__overlay\"\n              style={{ background: color.secondary }}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    ));\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  render() {\n    const { modal, primary, secondary, userColors } = this.state;\n\n    return (\n      <Menu as={Menu} icon=\"labeled\" inverted vertical visible>\n        {/* add color */}\n        <Divider />\n\n        <Button icon=\"add\" size=\"small\" color=\"blue\" onClick={this.openModal} />\n        {this.displayUserColors(userColors)}\n\n        {/* Color Picker Modal */}\n        <Modal basic open={modal} onClose={this.closeModal}>\n          <Modal.Header>Choose App Colors</Modal.Header>\n          <Modal.Content>\n            <Segment inverted>\n              <Label content=\"Primary Color\" />\n              <CirclePicker\n                color={primary}\n                onChange={this.handleChangePrimary}\n              />\n            </Segment>\n\n            <Segment inverted>\n              <Label content=\"Secondary Color\" />\n              <CirclePicker\n                color={secondary}\n                onChange={this.handleChangeSecondary}\n              />\n            </Segment>\n          </Modal.Content>\n          <Modal.Actions>\n            <Button color=\"green\" inverted onClick={this.handleSaveColors}>\n              <Icon name=\"checkmark\" /> Save Colors\n            </Button>\n            <Button color=\"red\" inverted onClick={this.closeModal}>\n              <Icon name=\"remove\" /> Cancel\n            </Button>\n          </Modal.Actions>\n        </Modal>\n      </Menu>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setColors }\n)(ColorPanel);\n","import React from \"react\";\nimport { Menu, Dropdown } from \"semantic-ui-react\";\n\nimport UserPanel from \"./UserPanel\";\nimport Channels from \"./Channels\";\nimport DirectMessages from \"./DirectMessages\";\nimport Starred from \"./Starred\";\nimport ColorPanel from \"../colorpanel/ColorPanel\";\n\nclass SidePanel extends React.Component {\n  render() {\n    const { currentUser, primaryColor } = this.props;\n\n    return (\n      <Menu\n        size=\"large\"\n        inverted\n        attached=\"top\"\n        stackable\n        style={{ background: primaryColor, fontSize: \"1.2rem\" }}\n      >\n        <Menu.Menu position=\"left\">\n          <Dropdown simple item icon=\"bars\">\n            <Dropdown.Menu>\n              <Dropdown.Divider />\n              <Dropdown.Item>\n                Starred\n                <Starred currentUser={currentUser} />\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item>\n                Channels\n                <Channels currentUser={currentUser} />\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item>\n                Direct Messages\n                <DirectMessages currentUser={currentUser} />\n              </Dropdown.Item>\n              <Dropdown.Divider />\n              <Dropdown.Item>\n                Change App Color\n                <ColorPanel currentUser={currentUser} />\n              </Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Menu>\n        <Menu.Menu position=\"right\">\n          <Menu.Item>\n            <UserPanel primaryColor={primaryColor} currentUser={currentUser} />\n          </Menu.Item>\n        </Menu.Menu>\n      </Menu>\n    );\n  }\n}\n\nexport default SidePanel;\n","import React from \"react\";\nimport { Header, Segment, Input, Icon } from \"semantic-ui-react\";\n\nclass MessagesHeader extends React.Component {\n  render() {\n    const {\n      channelName,\n      numUniqueUsers,\n      handleSearchChange,\n      searchLoading,\n      isPrivateChannel,\n      handleStar,\n      isChannelStarred\n    } = this.props;\n\n    return (\n      <div className=\"message__header\">\n      <Segment clearing >\n        {/* Channel Title */}\n        <Header fluid=\"true\" as=\"h4\"  style={{ marginBottom: 0 }}>\n          <span>\n            {channelName}\n            {!isPrivateChannel && (\n              <Icon\n                onClick={handleStar}\n                name={isChannelStarred ? \"star\" : \"star outline\"}\n                color={isChannelStarred ? \"yellow\" : \"black\"}\n              />\n            )}\n          </span>\n          <Header.Subheader>{numUniqueUsers}</Header.Subheader>\n          <Header.Subheader  ><Input\n            loading={searchLoading}\n            onChange={handleSearchChange}\n           \n            action='Search'\n            name=\"searchTerm\"\n            fluid\n            className=\"messages-search-input\"\n            placeholder=\"Search Messages\"\n          /></Header.Subheader>\n        </Header>\n\n      \n      </Segment>\n      </div>\n    );\n  }\n}\n\nexport default MessagesHeader;\n","import React from \"react\";\nimport mime from \"mime-types\";\nimport { Modal, Input, Button, Icon } from \"semantic-ui-react\";\n\nclass FileModal extends React.Component {\n  state = {\n    file: null,\n    authorized: [\"image/jpeg\", \"image/png\", \"image/gif\"]\n  };\n\n  addFile = event => {\n    const file = event.target.files[0];\n    if (file) {\n      this.setState({ file });\n    }\n  };\n\n  sendFile = () => {\n    const { file } = this.state;\n    const { uploadFile, closeModal } = this.props;\n\n    if (file !== null) {\n      if (this.isAuthorized(file.name)) {\n        const metadata = { contentType: mime.lookup(file.name) };\n        uploadFile(file, metadata);\n        closeModal();\n        this.clearFile();\n      }\n    }\n  };\n\n  isAuthorized = filename =>\n    this.state.authorized.includes(mime.lookup(filename));\n\n  clearFile = () => this.setState({ file: null });\n\n  render() {\n    const { modal, closeModal } = this.props;\n\n    return (\n      <Modal basic open={modal} onClose={closeModal}>\n        <Modal.Header>Select an Image File</Modal.Header>\n        <Modal.Content>\n          <Input\n            onChange={this.addFile}\n            fluid\n            label=\"File types: jpg, png, gif\"\n            name=\"file\"\n            type=\"file\"\n          />\n        </Modal.Content>\n        <Modal.Actions>\n          <Button onClick={this.sendFile} color=\"green\" inverted>\n            <Icon name=\"checkmark\" /> Send\n          </Button>\n          <Button color=\"red\" inverted onClick={closeModal}>\n            <Icon name=\"remove\" /> Cancel\n          </Button>\n        </Modal.Actions>\n      </Modal>\n    );\n  }\n}\n\nexport default FileModal;\n","import React from 'react';\nimport { Progress } from 'semantic-ui-react';\n\n\nconst ProgressBar = ({uploadState, percentUploaded}) => (\n    uploadState === 'uploading' && (\n        <Progress \n        className=\"progress__bar\"\n        percent={percentUploaded}\n        progress\n        indicating\n        size=\"medium\"\n        inverted\n\n        />\n    )\n)\n\nexport default ProgressBar;","import React from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport firebase from \"../../firebase\";\nimport { Segment, Button, Input } from \"semantic-ui-react\";\nimport { Picker, emojiIndex } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n\nimport FileModal from \"./FileModal\";\nimport ProgressBar from \"./ProgressBar\";\n\nclass MessageForm extends React.Component {\n  state = {\n    storageRef: firebase.storage().ref(),\n    typingRef: firebase.database().ref(\"typing\"),\n    uploadTask: null,\n    uploadState: \"\",\n    percentUploaded: 0,\n    message: \"\",\n    channel: this.props.currentChannel,\n    user: this.props.currentUser,\n    loading: false,\n    errors: [],\n    modal: false,\n    emojiPicker: false\n  };\n\n  componentWillUnmount() {\n    if (this.state.uploadTask !== null) {\n      this.state.uploadTask.cancel();\n      this.setState({ uploadTask: null });\n    }\n  }\n\n  openModal = () => this.setState({ modal: true });\n\n  closeModal = () => this.setState({ modal: false });\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleKeyDown = event => {\n    if ( event.keyCode === 13) {\n      this.sendMessage();\n    }\n\n    const { message, typingRef, channel, user } = this.state;\n\n    if (message) {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .set(user.displayName);\n    } else {\n      typingRef\n        .child(channel.id)\n        .child(user.uid)\n        .remove();\n    }\n  };\n\n  handleTogglePicker = () => {\n    this.setState({ emojiPicker: !this.state.emojiPicker });\n  };\n\n  handleAddEmoji = emoji => {\n    const oldMessage = this.state.message;\n    const newMessage = this.colonToUnicode(` ${oldMessage} ${emoji.colons} `);\n    this.setState({ message: newMessage, emojiPicker: false });\n    setTimeout(() => this.messageInputRef.focus(), 0);\n  };\n\n  colonToUnicode = message => {\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\n      x = x.replace(/:/g, \"\");\n      let emoji = emojiIndex.emojis[x];\n      if (typeof emoji !== \"undefined\") {\n        let unicode = emoji.native;\n        if (typeof unicode !== \"undefined\") {\n          return unicode;\n        }\n      }\n      x = \":\" + x + \":\";\n      return x;\n    });\n  };\n\n  createMessage = (fileUrl = null) => {\n    const message = {\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\n      user: {\n        id: this.state.user.uid,\n        name: this.state.user.displayName,\n        avatar: this.state.user.photoURL\n      }\n    };\n    if (fileUrl !== null) {\n      message[\"image\"] = fileUrl;\n    } else {\n      message[\"content\"] = this.state.message;\n    }\n    return message;\n  };\n\n  sendMessage = () => {\n    const { getMessagesRef } = this.props;\n    const { message, channel, user, typingRef } = this.state;\n\n    if (message) {\n      this.setState({ loading: true });\n      getMessagesRef()\n        .child(channel.id)\n        .push()\n        .set(this.createMessage())\n        .then(() => {\n          this.setState({ loading: false, message: \"\", errors: [] });\n          typingRef\n            .child(channel.id)\n            .child(user.uid)\n            .remove();\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            loading: false,\n            errors: this.state.errors.concat(err)\n          });\n        });\n    } else {\n      this.setState({\n        errors: this.state.errors.concat({ message: \"Add a message\" })\n      });\n    }\n  };\n\n  getPath = () => {\n    if (this.props.isPrivateChannel) {\n      return `chat/private/${this.state.channel.id}`;\n    } else {\n      return \"chat/public\";\n    }\n  };\n\n  uploadFile = (file, metadata) => {\n    const pathToUpload = this.state.channel.id;\n    const ref = this.props.getMessagesRef();\n    const filePath = `${this.getPath()}/${uuidv4()}.jpg`;\n\n    this.setState(\n      {\n        uploadState: \"uploading\",\n        uploadTask: this.state.storageRef.child(filePath).put(file, metadata)\n      },\n      () => {\n        this.state.uploadTask.on(\n          \"state_changed\",\n          snap => {\n            const percentUploaded = Math.round(\n              (snap.bytesTransferred / snap.totalBytes) * 100\n            );\n            this.setState({ percentUploaded });\n          },\n          err => {\n            console.error(err);\n            this.setState({\n              errors: this.state.errors.concat(err),\n              uploadState: \"error\",\n              uploadTask: null\n            });\n          },\n          () => {\n            this.state.uploadTask.snapshot.ref\n              .getDownloadURL()\n              .then(downloadUrl => {\n                this.sendFileMessage(downloadUrl, ref, pathToUpload);\n              })\n              .catch(err => {\n                console.error(err);\n                this.setState({\n                  errors: this.state.errors.concat(err),\n                  uploadState: \"error\",\n                  uploadTask: null\n                });\n              });\n          }\n        );\n      }\n    );\n  };\n\n  sendFileMessage = (fileUrl, ref, pathToUpload) => {\n    ref\n      .child(pathToUpload)\n      .push()\n      .set(this.createMessage(fileUrl))\n      .then(() => {\n        this.setState({ uploadState: \"done\" });\n      })\n      .catch(err => {\n        console.error(err);\n        this.setState({\n          errors: this.state.errors.concat(err)\n        });\n      });\n  };\n\n  render() {\n    // prettier-ignore\n    const { errors, message, loading, modal, uploadState, percentUploaded, emojiPicker } = this.state;\n\n    return (\n      <Segment className=\"message__form\">\n        {emojiPicker && (\n          <Picker\n            set=\"apple\"\n            onSelect={this.handleAddEmoji}\n            className=\"emojipicker\"\n            title=\"Pick your emoji\"\n            emoji=\"point_up\"\n          />\n        )}\n        <Input\n          fluid\n          name=\"message\"\n          onChange={this.handleChange}\n          onKeyDown={this.handleKeyDown}\n          value={message}\n          ref={node => (this.messageInputRef = node)}\n          style={{ marginBottom: \"0.7em\" }}\n          label={\n            <Button\n              icon={emojiPicker ? \"close\" : \"add\"}\n              content={emojiPicker ? \"Close\" : null}\n              onClick={this.handleTogglePicker}\n            />\n          }\n          labelPosition=\"left\"\n          className={\n            errors.some(error => error.message.includes(\"message\"))\n              ? \"error\"\n              : \"\"\n          }\n          placeholder=\"Write your message\"\n        />\n        <Button.Group icon widths=\"2\">\n          <Button\n            onClick={this.sendMessage}\n            disabled={loading}\n            color=\"orange\"\n            content=\"Add Reply\"\n            labelPosition=\"left\"\n            icon=\"edit\"\n          />\n          <Button\n            color=\"teal\"\n            disabled={uploadState === \"uploading\"}\n            onClick={this.openModal}\n            content=\"Upload Media\"\n            labelPosition=\"right\"\n            icon=\"cloud upload\"\n          />\n        </Button.Group>\n        <FileModal\n          modal={modal}\n          closeModal={this.closeModal}\n          uploadFile={this.uploadFile}\n        />\n        <ProgressBar\n          uploadState={uploadState}\n          percentUploaded={percentUploaded}\n        />\n      </Segment>\n    );\n  }\n}\n\nexport default MessageForm;\n","import React from \"react\";\nimport moment from \"moment\";\nimport { Comment, Image } from \"semantic-ui-react\";\n\nconst isOwnMessage = (message, user) => {\n  return message.user.id === user.uid ? \"message__self\" : \"\";\n};\n\nconst isImage = message => {\n  return message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\");\n};\n\nconst timeFromNow = timestamp => moment(timestamp).fromNow();\n\nconst Message = ({ message, user }) => (\n  <Comment>\n    <Comment.Avatar src={message.user.avatar} />\n    <Comment.Content className={isOwnMessage(message, user)}>\n      <Comment.Author as=\"a\">{message.user.name}</Comment.Author>\n      <Comment.Metadata>{timeFromNow(message.timestamp)}</Comment.Metadata>\n      {isImage(message) ? (\n        <Image src={message.image} className=\"message__image\" />\n      ) : (\n        <Comment.Text>{message.content}</Comment.Text>\n      )}\n    </Comment.Content>\n  </Comment>\n);\n\nexport default Message;\n","import React from 'react';\n\nconst Typing = () => (\n  <div className=\"typing\">\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n    <div className=\"typing__dot\"></div>\n  </div>\n)\n\nexport default Typing;","import React from \"react\";\n\nconst Skeleton = () => (\n  <div className=\"skeleton\">\n    <div className=\"skeleton__avatar\" />\n    <div className=\"skeleton__author\" />\n    <div className=\"skeleton__details\" />\n  </div>\n);\n\nexport default Skeleton;","import React from \"react\";\nimport { Segment, Comment } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport { setUserPosts } from \"../../actions\";\nimport firebase from \"../../firebase\";\n\nimport MessagesHeader from \"./MessagesHeader\";\nimport MessageForm from \"./MessageForm\";\nimport Message from \"./Message\";\nimport Typing from \"./Typing\";\nimport Skeleton from \"./Skeleton\";\n\nclass Messages extends React.Component {\n  state = {\n    privateChannel: this.props.isPrivateChannel,\n    privateMessagesRef: firebase.database().ref(\"privateMessages\"),\n    messagesRef: firebase.database().ref(\"messages\"),\n    messages: [],\n    messagesLoading: true,\n    channel: this.props.currentChannel,\n    isChannelStarred: false,\n    user: this.props.currentUser,\n    usersRef: firebase.database().ref(\"users\"),\n    numUniqueUsers: \"\",\n    searchTerm: \"\",\n    searchLoading: false,\n    searchResults: [],\n    typingRef: firebase.database().ref(\"typing\"),\n    typingUsers: [],\n    connectedRef: firebase.database().ref(\".info/connected\"),\n    listeners: []\n  };\n\n  componentDidMount() {\n    const { channel, user, listeners } = this.state;\n\n    if (channel && user) {\n      this.removeListeners(listeners);\n      this.addListeners(channel.id);\n      this.addUserStarsListener(channel.id, user.uid);\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners(this.state.listeners);\n    this.state.connectedRef.off();\n  }\n\n  removeListeners = listeners => {\n    listeners.forEach(listener => {\n      listener.ref.child(listener.id).off(listener.event);\n    });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.messagesEnd) {\n      this.scrollToBottom();\n    }\n  }\n\n  addToListeners = (id, ref, event) => {\n    const index = this.state.listeners.findIndex(listener => {\n      return (\n        listener.id === id && listener.ref === ref && listener.event === event\n      );\n    });\n\n    if (index === -1) {\n      const newListener = { id, ref, event };\n      this.setState({ listeners: this.state.listeners.concat(newListener) });\n    }\n  };\n\n  scrollToBottom = () => {\n    this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  addListeners = channelId => {\n    this.addMessageListener(channelId);\n    this.addTypingListeners(channelId);\n  };\n\n  addTypingListeners = channelId => {\n    let typingUsers = [];\n    this.state.typingRef.child(channelId).on(\"child_added\", snap => {\n      if (snap.key !== this.state.user.uid) {\n        typingUsers = typingUsers.concat({\n          id: snap.key,\n          name: snap.val()\n        });\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_added\");\n\n    this.state.typingRef.child(channelId).on(\"child_removed\", snap => {\n      const index = typingUsers.findIndex(user => user.id === snap.key);\n      if (index !== -1) {\n        typingUsers = typingUsers.filter(user => user.id !== snap.key);\n        this.setState({ typingUsers });\n      }\n    });\n    this.addToListeners(channelId, this.state.typingRef, \"child_removed\");\n\n    this.state.connectedRef.on(\"value\", snap => {\n      if (snap.val() === true) {\n        this.state.typingRef\n          .child(channelId)\n          .child(this.state.user.uid)\n          .onDisconnect()\n          .remove(err => {\n            if (err !== null) {\n              console.error(err);\n            }\n          });\n      }\n    });\n  };\n\n  addMessageListener = channelId => {\n    let loadedMessages = [];\n    const ref = this.getMessagesRef();\n    ref.child(channelId).on(\"child_added\", snap => {\n      loadedMessages.push(snap.val());\n      this.setState({\n        messages: loadedMessages,\n        messagesLoading: false\n      });\n      this.countUniqueUsers(loadedMessages);\n      this.countUserPosts(loadedMessages);\n    });\n    this.addToListeners(channelId, ref, \"child_added\");\n  };\n\n  addUserStarsListener = (channelId, userId) => {\n    this.state.usersRef\n      .child(userId)\n      .child(\"starred\")\n      .once(\"value\")\n      .then(data => {\n        if (data.val() !== null) {\n          const channelIds = Object.keys(data.val());\n          const prevStarred = channelIds.includes(channelId);\n          this.setState({ isChannelStarred: prevStarred });\n        }\n      });\n  };\n\n  getMessagesRef = () => {\n    const { messagesRef, privateMessagesRef, privateChannel } = this.state;\n    return privateChannel ? privateMessagesRef : messagesRef;\n  };\n\n  handleStar = () => {\n    this.setState(\n      prevState => ({\n        isChannelStarred: !prevState.isChannelStarred\n      }),\n      () => this.starChannel()\n    );\n  };\n\n  starChannel = () => {\n    if (this.state.isChannelStarred) {\n      this.state.usersRef.child(`${this.state.user.uid}/starred`).update({\n        [this.state.channel.id]: {\n          name: this.state.channel.name,\n          details: this.state.channel.details,\n          createdBy: {\n            name: this.state.channel.createdBy.name,\n            avatar: this.state.channel.createdBy.avatar\n          }\n        }\n      });\n    } else {\n      this.state.usersRef\n        .child(`${this.state.user.uid}/starred`)\n        .child(this.state.channel.id)\n        .remove(err => {\n          if (err !== null) {\n            console.error(err);\n          }\n        });\n    }\n  };\n\n  handleSearchChange = event => {\n    this.setState(\n      {\n        searchTerm: event.target.value,\n        searchLoading: true\n      },\n      () => this.handleSearchMessages()\n    );\n  };\n\n  handleSearchMessages = () => {\n    const channelMessages = [...this.state.messages];\n    const regex = new RegExp(this.state.searchTerm, \"gi\");\n    const searchResults = channelMessages.reduce((acc, message) => {\n      if (\n        (message.content && message.content.match(regex)) ||\n        message.user.name.match(regex)\n      ) {\n        acc.push(message);\n      }\n      return acc;\n    }, []);\n    this.setState({ searchResults });\n    setTimeout(() => this.setState({ searchLoading: false }), 1000);\n  };\n\n  countUniqueUsers = messages => {\n    const uniqueUsers = messages.reduce((acc, message) => {\n      if (!acc.includes(message.user.name)) {\n        acc.push(message.user.name);\n      }\n      return acc;\n    }, []);\n    const plural = uniqueUsers.length > 1 || uniqueUsers.length === 0;\n    const numUniqueUsers = `${uniqueUsers.length} user${plural ? \"s\" : \"\"}`;\n    this.setState({ numUniqueUsers });\n  };\n\n  countUserPosts = messages => {\n    let userPosts = messages.reduce((acc, message) => {\n      if (message.user.name in acc) {\n        acc[message.user.name].count += 1;\n      } else {\n        acc[message.user.name] = {\n          avatar: message.user.avatar,\n          count: 1\n        };\n      }\n      return acc;\n    }, {});\n    this.props.setUserPosts(userPosts);\n  };\n\n  displayMessages = messages =>\n    messages.length > 0 &&\n    messages.map(message => (\n      <Message\n        key={message.timestamp}\n        message={message}\n        user={this.state.user}\n      />\n    ));\n\n  displayChannelName = channel => {\n    return channel\n      ? `${this.state.privateChannel ? \"@\" : \"#\"}${channel.name}`\n      : \"\";\n  };\n\n  displayTypingUsers = users =>\n    users.length > 0 &&\n    users.map(user => (\n      <div\n        style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"0.2em\" }}\n        key={user.id}\n      >\n        <span className=\"user__typing\">{user.name} is typing</span> <Typing />\n      </div>\n    ));\n\n  displayMessageSkeleton = loading =>\n    loading ? (\n      <React.Fragment>\n        {[...Array(10)].map((_, i) => (\n          <Skeleton key={i} />\n        ))}\n      </React.Fragment>\n    ) : null;\n\n  render() {\n    // prettier-ignore\n    const { messagesRef, messages, channel, user, numUniqueUsers, searchTerm, searchResults, searchLoading, privateChannel, isChannelStarred, typingUsers, messagesLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <MessagesHeader\n          channelName={this.displayChannelName(channel)}\n          numUniqueUsers={numUniqueUsers}\n          handleSearchChange={this.handleSearchChange}\n          searchLoading={searchLoading}\n          isPrivateChannel={privateChannel}\n          handleStar={this.handleStar}\n          isChannelStarred={isChannelStarred}\n        />\n\n        <Segment>\n          <Comment.Group className=\"messages\">\n            {this.displayMessageSkeleton(messagesLoading)}\n            {searchTerm\n              ? this.displayMessages(searchResults)\n              : this.displayMessages(messages)}\n            {this.displayTypingUsers(typingUsers)}\n            <div ref={node => (this.messagesEnd = node)} />\n          </Comment.Group>\n        </Segment>\n\n        <MessageForm\n          messagesRef={messagesRef}\n          currentChannel={channel}\n          currentUser={user}\n          isPrivateChannel={privateChannel}\n          getMessagesRef={this.getMessagesRef}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { setUserPosts }\n)(Messages);\n","import React, { Component } from \"react\";\nimport { API_GIPHY } from \"../App\";\nimport {\n  Image,\n  Button,\n  Modal,\n  Header,\n  Reveal,\n  Loader\n} from \"semantic-ui-react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nclass Trending extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gifs: { data: [] },\n      hasMore: true\n    };\n  }\n\n  fetchMoreData = () => {\n    if (this.state.gifs.data.length >= 100) {\n      this.setState({ hasMore: false });\n      return;\n    }\n    // a fake async api call like which sends\n    // 5 more records in .5 secs\n    setTimeout(() => {\n      this.setState({\n        gifs: this.state.gifs.data.concat(Array.from({ length: 5 }))\n      });\n    }, 500);\n  };\n\n  componentDidMount() {\n    fetch(\n      `http://api.giphy.com/v1/gifs/trending?&api_key=${API_GIPHY}&limit=100`\n    )\n      .then(res => res.json())\n      .catch(error => console.error(\"Error:\", error))\n      .then(result => {\n        this.setState({\n          gifs: result\n        });\n      });\n  }\n\n  handleClick(item) {\n    console.log(\"Item\", item);\n  }\n\n  render() {\n    const listItems = this.state.gifs.data.map(item => (\n      <Modal\n        key={item.id}\n        trigger={\n          <Button\n            key={item.id}\n            \n            basic\n            onClick={this.handleClick.bind(this, item)}\n            target=\"new\"\n            style={{ padding: 8, marginLeft: 25, borderColor: \"white\" }}\n          >\n            <Reveal animated=\"fade\">\n              <Reveal.Content visible>\n                <Image\n                  size=\"big\"\n                  src={item.images.original_still.url}\n                  alt=\"trending\"\n                />\n              </Reveal.Content>\n              <Reveal.Content hidden>\n                <Image\n                  size=\"big\"\n                  src={item.images.original.url}\n                  alt=\"trending\"\n                />\n              </Reveal.Content>\n            </Reveal>\n          </Button>\n        }\n      >\n        <Modal.Header>{item.title}</Modal.Header>\n        <Modal.Content>\n          <Image\n            size=\"medium\"\n            centered\n            src={item.images.original.url}\n            alt=\"trending\"\n          />\n          <Modal.Description>\n            <Header>GIF Details</Header>\n            <p>\n              {\" \"}\n              <a href={item.url}>Visit Source</a>{\" \"}\n            </p>\n            <p>Rating: {item.rating}</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n    ));\n\n    return (\n      <div className=\"pakageTrending\">\n        <Header size='huge' className=\"top-trending\">Top Trending</Header>\n\n        <InfiniteScroll\n          dataLength={this.state.gifs.data.length}\n          next={this.fetchMoreData}\n          hasMore={this.state.hasMore}\n          loader={<Loader size=\"small\" content={\"Loading Trending...\"} />}\n          height={410}\n          className=\"infinite__scroll\"\n          endMessage={\n            <p style={{ textAlign: \"center\" }}>\n              <b>Yay! You have seen it all</b>\n            </p>\n          }\n        >\n          <Image.Group className=\"trending-image\" spaced>\n            {\" \"}\n            {listItems}{\" \"}\n          </Image.Group>\n        </InfiniteScroll>\n      </div>\n    );\n  }\n}\n\nexport default Trending;\n","import React from \"react\";\nimport { Grid, Image } from \"semantic-ui-react\";\nconst GifItem = ({gif, onGifSelect}) => {\n  return (\n    <Grid columns=\"equal\">\n      <Grid.Column>\n        <Image.Group size=\"small\">\n        <div className=\"gif-item\" onClick={() => onGifSelect(gif)}>\n        <img src={gif.images.downsized.url} alt=\"gif\" />\n          </div>\n        </Image.Group>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default GifItem;\n","import React from \"react\";\nimport GifItem from \"./GifItem\";\n\nconst GifList = props => {\n  const gifItems = props.gifs.map(image => {\n    return <GifItem key={image.id} gif={image}  onGifSelect={props.onGifSelect} />\n  });\n\n  return <div className=\"gif-list\">{gifItems}</div>;\n};\n\nexport default GifList;\n","import React from \"react\";\nimport { Input } from 'semantic-ui-react';\n\nclass SearchBar extends React.Component {\n  constructor() {\n    super();\n    this.state = { term: \"\" };\n  }\n\n  onInputChange(term) {\n    this.setState({ term });\n    this.props.onTermChange(term);\n  }\n\n  render() {\n    return (\n      <div className=\"search\">\n        <Input icon='search' focus placeholder='Search...' onChange={event => this.onInputChange(event.target.value)} />\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport Modal from \"react-modal\";\nimport { Button, Image } from \"semantic-ui-react\";\n\nconst GifModal = props => {\n  if (!props.selectedGif) {\n    return <div />;\n  }\n\n  const customStyles = {\n    content : {\n      top                   : '5%',\n      left                  : '30%',\n      right                 : 'auto',\n      bottom                : 'auto'\n      \n    }\n  };\n\n  return (\n    <Modal\n      isOpen={props.modalIsOpen}\n      onRequestClose={() => props.onRequestClose()}\n      style={customStyles}\n    >\n      <div className=\"gif-modal\">\n        <Image size=\"small\" src={props.selectedGif.images.original.url} alt=\"gif\" />\n        <p>\n          <strong>Title:</strong> {props.selectedGif.title}\n        </p>\n        <p>\n          <strong>Source:</strong>{\" \"}\n          <a href={props.selectedGif.source}>{props.selectedGif.source}</a>\n        </p>\n        <p>\n          <strong>Rating:</strong> {props.selectedGif.rating}\n        </p>\n\n        <Button color=\"blue\" inverted onClick={() => props.onRequestClose()}>\n          close\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default GifModal;\n","import React from \"react\";\nimport GifList from \"./GifList\";\nimport SearchBar from \"./SearchBar\";\nimport GifModal from \"./GifModal\";\nimport request from \"superagent\";\nclass Search extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      gifs: [],\n      selectedGif: null,\n      modalIsOpen: false\n    };\n    // may not need this\n    this.handleTermChange = this.handleTermChange.bind(this);\n  }\n\n  openModal(gif) {\n    this.setState({\n      modalIsOpen: true,\n      selectedGif: gif\n    });\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false,\n      selectedGif: null\n    });\n  }\n\n  handleTermChange(term) {\n    const url = `http://api.giphy.com/v1/gifs/search?q=${term.replace(\n      /\\s/g,\n      \"+\"\n    )}&api_key=SZ5xTwbzBNF65yvYK1cyJt3oRClkTsNH&limit=8`;\n\n    request.get(url, (err, res) => {\n      this.setState({ gifs: res.body.data });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"search__gifs\">\n        <SearchBar onTermChange={term => this.handleTermChange(term)} />\n\n        <GifList\n          gifs={this.state.gifs}\n          onGifSelect={selectedGif => this.openModal(selectedGif)}\n        />\n        <GifModal\n          modalIsOpen={this.state.modalIsOpen}\n          selectedGif={this.state.selectedGif}\n          onRequestClose={() => this.closeModal()}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport \"./App.css\";\n\nimport SidePanel from \"./sidepanel/SidePanel\";\n\nimport Messages from \"./messages/Messages\";\nimport Trending from \"./trending/Trending\";\nimport Search from \"./gifsearch/Search\";\n\nimport { connect } from \"react-redux\";\n\nexport const API_GIPHY = \"SZ5xTwbzBNF65yvYK1cyJt3oRClkTsNH\";\n\nconst App = ({\n  currentUser,\n  currentChannel,\n  isPrivateChannel,\n  primaryColor,\n  secondaryColor\n}) => (\n  <Grid stackable columns=\"equal\" className=\"app\" style={{ background: secondaryColor }}>\n\n    <SidePanel\n      key={currentUser && currentUser.uid}\n      currentUser={currentUser}\n      primaryColor={primaryColor}\n    />\n\n    <Grid.Column stackable  width={9} className=\"search_and_trending\">\n      <Search />\n      <Trending />\n    </Grid.Column>\n\n    <Grid.Column stackable width={7}  className=\"messages_content\">\n      <Messages\n        key={currentChannel && currentChannel.id}\n        currentChannel={currentChannel}\n        currentUser={currentUser}\n        isPrivateChannel={isPrivateChannel}\n      />\n    </Grid.Column>\n  </Grid>\n);\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentChannel: state.channel.currentChannel,\n  isPrivateChannel: state.channel.isPrivateChannel,\n  userPosts: state.channel.userPosts,\n  primaryColor: state.colors.primaryColor,\n  secondaryColor: state.colors.secondaryColor\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from \"react\";\nimport firebase from \"../../firebase\";\n\n// imports from semantic-ui\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\n\nimport { Link } from \"react-router-dom\";\n\nclass Login extends React.Component {\n  state = {\n    email: \"\",\n    password: \"\",\n    errors: [],\n    loading: false\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid(this.state)) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .signInWithEmailAndPassword(this.state.email, this.state.password)\n        .then(signedInUser => {\n          console.log(signedInUser);\n        })\n        .catch(err => {\n          console.error(err); \n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  isFormValid = ({ email, password }) => email && password;\n\n  handleIputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    //   destructure all values from state object and pass them down to individual inputs\n    const { email, password, errors, loading } = this.state;\n    return (\n      // Grid is used to structure content within components\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        {/* Grid.Colum puts everything in a column */}\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"violet\" textAlign=\"center\">\n            <Icon name=\"code branch\" color=\"violet\" />\n            Login to GiphyChat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleIputError(errors, \"email\")}\n                type=\"email\"\n              />\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleIputError(errors, \"password\")}\n                type=\"password\"\n              />\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"violet\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Don't have an account? <Link to=\"/register\">Register</Link>{\" \"}\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport firebase from \"../../firebase\";\n\n// md5 is usually used to hash messages. here we will use it to hash email\nimport md5 from \"md5\";\n\n// imports from semantic-ui\nimport {\n  Grid,\n  Form,\n  Segment,\n  Button,\n  Header,\n  Message,\n  Icon\n} from \"semantic-ui-react\";\n\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  state = {\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConfirmation: \"\",\n    errors: [],\n    loading: false,\n    usersRef: firebase.database().ref(\"users\")\n  };\n\n  isFormValid = () => {\n    let errors = [];\n    let error;\n\n    if (this.isformEmpty(this.state)) {\n      //   throw error\n      error = { message: \"Fill in all fields\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else if (!this.isPasswordValid(this.state)) {\n      // throw error\n      error = { message: \"Password is invalid\" };\n      this.setState({ errors: errors.concat(error) });\n      return false;\n    } else {\n      // form valid\n      return true;\n    }\n  };\n\n  isformEmpty = ({ username, email, password, passwordConfirmation }) => {\n    return (\n      !username.length ||\n      !email.length ||\n      !password.length ||\n      !passwordConfirmation.length\n    );\n  };\n\n  isPasswordValid = ({ password, passwordConfirmation }) => {\n    if (password.length < 6 || passwordConfirmation.length < 6) {\n      return false;\n    } else if (password !== passwordConfirmation) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  displayErrors = errors =>\n    errors.map((error, i) => <p key={i}>{error.message}</p>);\n\n  handleChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    if (this.isFormValid()) {\n      this.setState({ errors: [], loading: true });\n      firebase\n        .auth()\n        .createUserWithEmailAndPassword(this.state.email, this.state.password)\n        .then(createdUser => {\n          console.log(createdUser);\n          createdUser.user\n            .updateProfile({\n              displayName: this.state.username,\n              photoURL: `http://gravatar.com/avatar/${md5(\n                createdUser.user.email\n              )}?d=identicon`\n            })\n            .then(() => {\n              this.saveUser(createdUser).then(() => {\n                console.log(\"user saved\");\n              });\n            })\n            .catch(err => {\n              console.error(err);\n              this.setState({\n                errors: this.state.errors.concat(err),\n                loading: false\n              });\n            });\n        })\n        .catch(err => {\n          console.error(err);\n          this.setState({\n            errors: this.state.errors.concat(err),\n            loading: false\n          });\n        });\n    }\n  };\n\n  saveUser = createdUser => {\n    return this.state.usersRef.child(createdUser.user.uid).set({\n      name: createdUser.user.displayName,\n      avatar: createdUser.user.photoURL\n    });\n  };\n\n  handleIputError = (errors, inputName) => {\n    return errors.some(error => error.message.toLowerCase().includes(inputName))\n      ? \"error\"\n      : \"\";\n  };\n\n  render() {\n    //   destructure all values from state object and pass them down to individual inputs\n    const {\n      username,\n      email,\n      password,\n      passwordConfirmation,\n      errors,\n      loading\n    } = this.state;\n    return (\n      // Grid is used to structure content within components\n      <Grid textAlign=\"center\" verticalAlign=\"middle\" className=\"app\">\n        {/* Grid.Colum puts everything in a column */}\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h1\" icon color=\"orange\" textAlign=\"center\">\n            <Icon name=\"puzzle piece\" color=\"orange\" />\n            Register for GiphyChat\n          </Header>\n          <Form onSubmit={this.handleSubmit} size=\"large\">\n            <Segment stacked>\n              <Form.Input\n                fluid\n                name=\"username\"\n                icon=\"user\"\n                iconPosition=\"left\"\n                placeholder=\"Username\"\n                onChange={this.handleChange}\n                value={username}\n                className={this.handleIputError(errors, \"username\")}\n                type=\"text\"\n              />\n              <Form.Input\n                fluid\n                name=\"email\"\n                icon=\"mail\"\n                iconPosition=\"left\"\n                placeholder=\"Email\"\n                onChange={this.handleChange}\n                value={email}\n                className={this.handleIputError(errors, \"email\")}\n                type=\"email\"\n              />\n              <Form.Input\n                fluid\n                name=\"password\"\n                icon=\"lock\"\n                iconPosition=\"left\"\n                placeholder=\"Password\"\n                onChange={this.handleChange}\n                value={password}\n                className={this.handleIputError(errors, \"password\")}\n                type=\"password\"\n              />\n              <Form.Input\n                fluid\n                name=\"passwordConfirmation\"\n                icon=\"repeat\"\n                iconPosition=\"left\"\n                placeholder=\"Password Confirmation\"\n                onChange={this.handleChange}\n                value={passwordConfirmation}\n                className={this.handleIputError(errors, \"password\")}\n                type=\"password\"\n              />\n              <Button\n                disabled={loading}\n                className={loading ? \"loading\" : \"\"}\n                color=\"orange\"\n                fluid\n                size=\"large\"\n              >\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          {errors.length > 0 && (\n            <Message error>\n              <h3>Error</h3>\n              {this.displayErrors(errors)}\n            </Message>\n          )}\n          <Message>\n            Already a user? <Link to=\"/login\">Login</Link>{\" \"}\n          </Message>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default Register;\n","import React from \"react\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\n\nconst Spinner = () => (\n  <Dimmer active>\n    <Loader size=\"huge\" content={\"Preparing GiphyChat...\"} />\n  </Dimmer>\n);\nexport default Spinner;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type').indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import { combineReducers } from \"redux\";\nimport * as actionTypes from \"../actions/types\";\n\nconst initialUserState = {\n  currentUser: null,\n  isLoading: true\n};\n\nconst user_reducer = (state = initialUserState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_USER:\n      return {\n        currentUser: action.payload.currentUser,\n        isLoading: false\n      };\n    case actionTypes.CLEAR_USER:\n      return {\n        ...state,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialChannelState = {\n  currentChannel: null,\n  isPrivateChannel: false,\n  userPosts: null\n};\n\nconst channel_reducer = (state = initialChannelState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_CURRENT_CHANNEL:\n      return {\n        ...state,\n        currentChannel: action.payload.currentChannel\n      };\n    case actionTypes.SET_PRIVATE_CHANNEL:\n      return {\n        ...state,\n        isPrivateChannel: action.payload.isPrivateChannel\n      };\n    case actionTypes.SET_USER_POSTS:\n      return {\n        ...state,\n        userPosts: action.payload.userPosts\n      };\n    default:\n      return state;\n  }\n};\n\nconst initialColorsState = {\n  primaryColor: \"#4c3c4c\",\n  secondaryColor: \"#eee\"\n};\n\nconst colors_reducer = (state = initialColorsState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_COLORS:\n      return {\n        primaryColor: action.payload.primaryColor,\n        secondaryColor: action.payload.secondaryColor\n      };\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: user_reducer,\n  channel: channel_reducer,\n  colors: colors_reducer\n});\n\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Trending from \"./components/trending/Trending\";\n\nimport Spinner from \"./Spinner\";\n\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nimport firebase from \"./firebase\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\n\nimport { createStore } from \"redux\";\nimport { Provider, connect } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nimport { setUser, clearUser } from \"./actions\";\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nclass Root extends React.Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        this.props.setUser(user);\n        this.props.history.push(\"/\");\n      } else {\n        this.props.history.push(\"/login\");\n        this.props.clearUser();\n      }\n    });\n  }\n\n  render() {\n    return this.props.isLoading ? (\n      <Spinner />\n    ) : (\n      <Switch>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/trending\" component={Trending} />\n      </Switch>\n    );\n  }\n}\n\nconst mapStateFromProps = state => ({\n  isLoading: state.user.isLoading\n});\n\nconst RootWithAuth = withRouter(\n  connect(\n    mapStateFromProps,\n    { setUser, clearUser }\n  )(Root)\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\nregisterServiceWorker();\n"],"sourceRoot":""}